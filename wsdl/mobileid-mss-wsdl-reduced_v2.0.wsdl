<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="MSS" targetNamespace="http://swisscom.com/esauth/wsdl/mss.wsdl" 
	xmlns:tns="http://swisscom.com/esauth/wsdl/mss.wsdl" 
	xmlns:apachesoap="http://xml.apache.org/xml-soap" 
	xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#" 
    	xmlns:wsoap12="http://schemas.xmlsoap.org/wsdl/soap12/" 
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
	xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
	xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"
	xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
	xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
	xmlns:xml="http://www.w3.org/XML/1998/namespace" 
	>  

  <wsdl:types>
        
	<xs:schema targetNamespace="http://www.w3.org/2001/04/xmlenc#" 
		xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
		xmlns:xs="http://www.w3.org/2001/XMLSchema" 
		version="1.0" 
		elementFormDefault="qualified">
	
	  <xs:complexType name="EncryptedType" abstract="true">
	    <xs:sequence>
	      <xs:element name="EncryptionMethod" type="xenc:EncryptionMethodType" minOccurs="0"/>
	      <xs:element ref="ds:KeyInfo" minOccurs="0"/>
	      <xs:element ref="xenc:CipherData"/>
	      <xs:element ref="xenc:EncryptionProperties" minOccurs="0"/>
	    </xs:sequence>
	    <xs:attribute name="Id" type="xs:ID" use="optional"/>
	    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
	    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
	    <xs:attribute name="Encoding" type="xs:anyURI" use="optional"/>
	  </xs:complexType>
	  
	  <xs:complexType name="EncryptionMethodType" mixed="true">
	    <xs:sequence>
	      <xs:element name="KeySize" minOccurs="0" type="xenc:KeySizeType"/>
	      <xs:element name="OAEPparams" minOccurs="0" type="xs:base64Binary"/>
	      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
	  </xs:complexType>
	
	    <xs:simpleType name="KeySizeType">
	      <xs:restriction base="xs:integer"/>
	    </xs:simpleType>
	
	  <xs:element name="CipherData" type="xenc:CipherDataType"/>
	  <xs:complexType name="CipherDataType">
	     <xs:choice>
	       <xs:element name="CipherValue" type="xs:base64Binary"/>
	       <xs:element ref="xenc:CipherReference"/>
	     </xs:choice>
	    </xs:complexType>
	
	   <xs:element name="CipherReference" type="xenc:CipherReferenceType"/>
	   <xs:complexType name="CipherReferenceType">
	       <xs:choice>
	         <xs:element name="Transforms" type="xenc:TransformsType" minOccurs="0"/>
	       </xs:choice>
	       <xs:attribute name="URI" type="xs:anyURI" use="required"/>
	   </xs:complexType>
	
	     <xs:complexType name="TransformsType">
	       <xs:sequence>
	         <xs:element ref="ds:Transform" maxOccurs="unbounded"/>
	       </xs:sequence>
	     </xs:complexType>
	
	
	  <xs:element name="EncryptedData" type="xenc:EncryptedDataType"/>
	  <xs:complexType name="EncryptedDataType">
	    <xs:complexContent>
	      <xs:extension base="xenc:EncryptedType">
	       </xs:extension>
	    </xs:complexContent>
	  </xs:complexType>
	
	  <!-- Children of ds:KeyInfo -->
	
	  <xs:element name="EncryptedKey" type="xenc:EncryptedKeyType"/>
	  <xs:complexType name="EncryptedKeyType">
	    <xs:complexContent>
	      <xs:extension base="xenc:EncryptedType">
	        <xs:sequence>
	          <xs:element ref="xenc:ReferenceList" minOccurs="0"/>
	          <xs:element name="CarriedKeyName" type="xs:string" minOccurs="0"/>
	        </xs:sequence>
	        <xs:attribute name="Recipient" type="xs:string" use="optional"/>
	      </xs:extension>
	    </xs:complexContent>
	  </xs:complexType>
	
	    <xs:element name="AgreementMethod" type="xenc:AgreementMethodType"/>
	    <xs:complexType name="AgreementMethodType" mixed="true">
	      <xs:sequence>
	        <xs:element name="KA-Nonce" minOccurs="0" type="xs:base64Binary"/>
	        <!-- <xs:element ref="ds:DigestMethod" minOccurs="0"/> -->
	        <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
	        <xs:element name="OriginatorKeyInfo" minOccurs="0" type="ds:KeyInfoType"/>
	        <xs:element name="RecipientKeyInfo" minOccurs="0" type="ds:KeyInfoType"/>
	      </xs:sequence>
	      <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
	    </xs:complexType>
	
	  <!-- End Children of ds:KeyInfo -->
	
	  <xs:element name="ReferenceList">
	    <xs:complexType>
	      <xs:choice minOccurs="1" maxOccurs="unbounded">
	        <xs:element name="DataReference" type="xenc:ReferenceType"/>
	        <xs:element name="KeyReference" type="xenc:ReferenceType"/>
	      </xs:choice>
	    </xs:complexType>
	  </xs:element>
	
	  <xs:complexType name="ReferenceType">
	    <xs:sequence>
	      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:attribute name="URI" type="xs:anyURI" use="required"/>
	  </xs:complexType>
	
	
	  <xs:element name="EncryptionProperties" type="xenc:EncryptionPropertiesType"/>
	  <xs:complexType name="EncryptionPropertiesType">
	    <xs:sequence>
	      <xs:element ref="xenc:EncryptionProperty" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:attribute name="Id" type="xs:ID" use="optional"/>
	  </xs:complexType>
	
	    <xs:element name="EncryptionProperty" type="xenc:EncryptionPropertyType"/>
	    <xs:complexType name="EncryptionPropertyType" mixed="true">
	      <xs:choice maxOccurs="unbounded">
	        <xs:any namespace="##other" processContents="lax"/>
	      </xs:choice>
	      <xs:attribute name="Target" type="xs:anyURI" use="optional"/>
	      <xs:attribute name="Id" type="xs:ID" use="optional"/>
	      <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace"/>
	    </xs:complexType>
	
	</xs:schema>
	
	   	   
	<xs:schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	version="0.1" elementFormDefault="qualified"> 

		<!-- Basic Types Defined for Signatures -->
		
		<xs:simpleType name="CryptoBinary">
		  <xs:restriction base="xs:base64Binary">
		  </xs:restriction>
		</xs:simpleType>
		
		<!-- Start Signature -->
		
		<xs:element name="Signature" type="ds:SignatureType"/>
		<xs:complexType name="SignatureType">
		  <xs:sequence> 
		    <xs:element ref="ds:SignedInfo"/> 
		    <xs:element ref="ds:SignatureValue"/> 
		    <xs:element ref="ds:KeyInfo" minOccurs="0"/> 
		    <xs:element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/> 
		  </xs:sequence>  
		  <xs:attribute name="Id" type="xs:ID" use="optional"/>
		</xs:complexType>
		
		  <xs:element name="SignatureValue" type="ds:SignatureValueType"/> 
		  <xs:complexType name="SignatureValueType">
		    <xs:simpleContent>
		      <xs:extension base="xs:base64Binary">
		        <xs:attribute name="Id" type="xs:ID" use="optional"/>
		      </xs:extension>
		    </xs:simpleContent>
		  </xs:complexType>
		
		<!-- Start SignedInfo -->
		
		<xs:element name="SignedInfo" type="ds:SignedInfoType"/>
		<xs:complexType name="SignedInfoType">
		  <xs:sequence> 
		    <xs:element ref="ds:CanonicalizationMethod"/> 
		    <xs:element ref="ds:SignatureMethod"/> 
		    <xs:element ref="ds:Reference" maxOccurs="unbounded"/> 
		  </xs:sequence>  
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		</xs:complexType>
		
		  <xs:element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/> 
		  <xs:complexType name="CanonicalizationMethodType" mixed="true">
		    <xs:sequence>
		      <xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
		      <!-- (0,unbounded) elements from (1,1) namespace -->
		    </xs:sequence>
		    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/> 
		  </xs:complexType>
		
		  <xs:element name="SignatureMethod" type="ds:SignatureMethodType"/>
		  <xs:complexType name="SignatureMethodType" mixed="true">
		    <xs:sequence>
		      <xs:element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
		      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
		      <!-- (0,unbounded) elements from (1,1) external namespace -->
		    </xs:sequence>
		    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/> 
		  </xs:complexType>
		
		<!-- Start Reference -->
		
		<xs:element name="Reference" type="ds:ReferenceType"/>
		<xs:complexType name="ReferenceType">
		  <xs:sequence> 
		    <xs:element ref="ds:Transforms" minOccurs="0"/> 
		    <xs:element ref="ds:DigestMethod"/> 
		    <xs:element ref="ds:DigestValue"/> 
		  </xs:sequence>
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		  <xs:attribute name="URI" type="xs:anyURI" use="optional"/> 
		  <xs:attribute name="Type" type="xs:anyURI" use="optional"/> 
		</xs:complexType>
		
		  <xs:element name="Transforms" type="ds:TransformsType"/>
		  <xs:complexType name="TransformsType">
		    <xs:sequence>
		      <xs:element ref="ds:Transform" maxOccurs="unbounded"/>  
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:element name="Transform" type="ds:TransformType"/>
		  <xs:complexType name="TransformType" mixed="true">
		    <xs:choice minOccurs="0" maxOccurs="unbounded"> 
		      <xs:any namespace="##other" processContents="lax"/>
		      <!-- (1,1) elements from (0,unbounded) namespaces -->
		      <xs:element name="XPath" type="xs:string"/> 
		    </xs:choice>
		    <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/> 
		  </xs:complexType>
		
		<!-- End Reference -->
		
		<xs:element name="DigestMethod" type="ds:DigestMethodType"/>
		<xs:complexType name="DigestMethodType" mixed="true"> 
		  <xs:sequence>
		    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		  </xs:sequence>    
		  <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/> 
		</xs:complexType>
		
		<xs:element name="DigestValue" type="ds:DigestValueType"/>
		<xs:simpleType name="DigestValueType">
		  <xs:restriction base="xs:base64Binary"/>
		</xs:simpleType>
		
		<!-- End SignedInfo -->
		
		<!-- Start KeyInfo -->
		
		<xs:element name="KeyInfo" type="ds:KeyInfoType"/> 
		<xs:complexType name="KeyInfoType" mixed="true">
		  <xs:choice maxOccurs="unbounded">     
		    <xs:element ref="ds:KeyName"/> 
		    <xs:element ref="ds:KeyValue"/> 
		    <xs:element ref="ds:RetrievalMethod"/> 
		    <xs:element ref="ds:X509Data"/> 
		    <xs:element ref="ds:PGPData"/> 
		    <xs:element ref="ds:SPKIData"/>
		    <xs:element ref="ds:MgmtData"/>
		    <xs:any processContents="lax" namespace="##other"/>
		    <!-- (1,1) elements from (0,unbounded) namespaces -->
		  </xs:choice>
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		</xs:complexType>
		
		  <xs:element name="KeyName" type="xs:string"/>
		  <xs:element name="MgmtData" type="xs:string"/>
		
		  <xs:element name="KeyValue" type="ds:KeyValueType"/> 
		  <xs:complexType name="KeyValueType" mixed="true">
		   <xs:choice>
		     <xs:element ref="ds:DSAKeyValue"/>
		     <xs:element ref="ds:RSAKeyValue"/>
		     <xs:any namespace="##other" processContents="lax"/>
		   </xs:choice>
		  </xs:complexType>
		
		  <xs:element name="RetrievalMethod" type="ds:RetrievalMethodType"/> 
		  <xs:complexType name="RetrievalMethodType">
		    <xs:sequence>
		      <xs:element ref="ds:Transforms" minOccurs="0"/> 
		    </xs:sequence>  
		    <xs:attribute name="URI" type="xs:anyURI"/>
		    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
		  </xs:complexType>
		
		<!-- Start X509Data -->
		
		<xs:element name="X509Data" type="ds:X509DataType"/> 
		<xs:complexType name="X509DataType">
		  <xs:sequence maxOccurs="unbounded">
		    <xs:choice>
		      <xs:element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
		      <xs:element name="X509SKI" type="xs:base64Binary"/>
		      <xs:element name="X509SubjectName" type="xs:string"/>
		      <xs:element name="X509Certificate" type="xs:base64Binary"/>
		      <xs:element name="X509CRL" type="xs:base64Binary"/>
		      <xs:any namespace="##other" processContents="lax"/>
		    </xs:choice>
		  </xs:sequence>
		</xs:complexType>
		
		<xs:complexType name="X509IssuerSerialType"> 
		  <xs:sequence> 
		    <xs:element name="X509IssuerName" type="xs:string"/> 
		    <xs:element name="X509SerialNumber" type="xs:integer"/> 
		  </xs:sequence>
		</xs:complexType>
		
		<!-- End X509Data -->
		
		<!-- Begin PGPData -->
		
		<xs:element name="PGPData" type="ds:PGPDataType"/> 
		<xs:complexType name="PGPDataType"> 
		  <xs:choice>
		    <xs:sequence>
		      <xs:element name="PGPKeyID" type="xs:base64Binary"/> 
		      <xs:element name="PGPKeyPacket" type="xs:base64Binary" minOccurs="0"/> 
		      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		    <xs:sequence>
		      <xs:element name="PGPKeyPacket" type="xs:base64Binary"/> 
		      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:choice>
		</xs:complexType>
		
		<!-- End PGPData -->
		
		<!-- Begin SPKIData -->
		
		<xs:element name="SPKIData" type="ds:SPKIDataType"/> 
		<xs:complexType name="SPKIDataType">
		  <xs:sequence maxOccurs="unbounded">
		    <xs:element name="SPKISexp" type="xs:base64Binary"/>
		    <xs:any namespace="##other" processContents="lax" minOccurs="0"/>
		  </xs:sequence>
		</xs:complexType> 
		
		<!-- End SPKIData -->
		
		<!-- End KeyInfo -->
		
		<!-- Start Object (Manifest, SignatureProperty) -->
		
		<xs:element name="Object" type="ds:ObjectType"/> 
		<xs:complexType name="ObjectType" mixed="true">
		  <xs:sequence minOccurs="0" maxOccurs="unbounded">
		    <xs:any namespace="##any" processContents="lax"/>
		  </xs:sequence>
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		  <xs:attribute name="MimeType" type="xs:string" use="optional"/> <!-- add a grep facet -->
		  <xs:attribute name="Encoding" type="xs:anyURI" use="optional"/> 
		</xs:complexType>
		
		<xs:element name="Manifest" type="ds:ManifestType"/> 
		<xs:complexType name="ManifestType">
		  <xs:sequence>
		    <xs:element ref="ds:Reference" maxOccurs="unbounded"/> 
		  </xs:sequence>
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		</xs:complexType>
		
		<xs:element name="SignatureProperties" type="ds:SignaturePropertiesType"/> 
		<xs:complexType name="SignaturePropertiesType">
		  <xs:sequence>
		    <xs:element ref="ds:SignatureProperty" maxOccurs="unbounded"/> 
		  </xs:sequence>
		  <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		</xs:complexType>
		
		   <xs:element name="SignatureProperty" type="ds:SignaturePropertyType"/> 
		   <xs:complexType name="SignaturePropertyType" mixed="true">
		     <xs:choice maxOccurs="unbounded">
		       <xs:any namespace="##other" processContents="lax"/>
		       <!-- (1,1) elements from (1,unbounded) namespaces -->
		     </xs:choice>
		     <xs:attribute name="Target" type="xs:anyURI" use="required"/> 
		     <xs:attribute name="Id" type="xs:ID" use="optional"/> 
		   </xs:complexType>
		
		<!-- End Object (Manifest, SignatureProperty) -->
		
		<!-- Start Algorithm Parameters -->
		
		<xs:simpleType name="HMACOutputLengthType">
		  <xs:restriction base="xs:integer"/>
		</xs:simpleType>
		
		<!-- Start KeyValue Element-types -->
		
		<xs:element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
		<xs:complexType name="DSAKeyValueType">
		  <xs:sequence>
		    <xs:sequence minOccurs="0">
		      <xs:element name="P" type="ds:CryptoBinary"/>
		      <xs:element name="Q" type="ds:CryptoBinary"/>
		    </xs:sequence>
		    <xs:element name="G" type="ds:CryptoBinary" minOccurs="0"/>
		    <xs:element name="Y" type="ds:CryptoBinary"/>
		    <xs:element name="J" type="ds:CryptoBinary" minOccurs="0"/>
		    <xs:sequence minOccurs="0">
		      <xs:element name="Seed" type="ds:CryptoBinary"/>
		      <xs:element name="PgenCounter" type="ds:CryptoBinary"/>
		    </xs:sequence>
		  </xs:sequence>
		</xs:complexType>
		
		<xs:element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
		<xs:complexType name="RSAKeyValueType">
		  <xs:sequence>
		    <xs:element name="Modulus" type="ds:CryptoBinary"/> 
		    <xs:element name="Exponent" type="ds:CryptoBinary"/> 
		  </xs:sequence>
		</xs:complexType> 
		
		<!-- End KeyValue Element-types -->
		
		<!-- End Signature -->
		
	</xs:schema>
	
	   
	<xs:schema targetNamespace="http://www.w3.org/2003/05/soap-envelope"
		elementFormDefault="qualified">

	  <!-- Envelope, header and body -->
	 <xs:element name="Envelope" type="soapenv:Envelope"/>
	  <xs:complexType name="Envelope">
	    <xs:sequence>
	      <xs:element ref="soapenv:Header" minOccurs="0"/>
	      <xs:element ref="soapenv:Body" minOccurs="1"/>
	    </xs:sequence>
	    <xs:anyAttribute namespace="##other" processContents="lax"/>
	  </xs:complexType>
	
	  <xs:element name="Header" type="soapenv:Header"/>
	  <xs:complexType name="Header">
	    <xs:annotation>
		  <xs:documentation>
		  Elements replacing the wildcard MUST be namespace qualified, but can be in the targetNamespace
		  </xs:documentation>
		</xs:annotation>
	    <xs:sequence>
	      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:anyAttribute namespace="##other" processContents="lax"/>
	  </xs:complexType>
	  
	  <xs:element name="Body" type="soapenv:Body"/>
	  <xs:complexType name="Body">
	    <xs:sequence>
	      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:anyAttribute namespace="##other" processContents="lax"/>
	  </xs:complexType>
	
	  <!-- Global Attributes.  The following attributes are intended to be
	  usable via qualified attribute names on any complex type referencing
	  them.  -->
	  <xs:attribute name="mustUnderstand" type="xs:boolean" default="0"/>
	  <xs:attribute name="relay" type="xs:boolean" default="0"/>
	  <xs:attribute name="role" type="xs:anyURI"/>
	
	  <!-- 'encodingStyle' indicates any canonicalization conventions
	  followed in the contents of the containing element.  For example, the
	  value 'http://www.w3.org/2003/05/soap-encoding' indicates the pattern
	  described in the SOAP Version 1.2 Part 2: Adjuncts Recommendation -->
	
	  <xs:attribute name="encodingStyle" type="xs:anyURI"/>
	
	  <xs:element name="Fault" type="soapenv:Fault"/>
	  <xs:complexType name="Fault" final="extension">
	    <xs:annotation>
		  <xs:documentation>
		    Fault reporting structure
		  </xs:documentation>
		</xs:annotation>
	    <xs:sequence>
	      <xs:element name="Code" type="soapenv:faultcode"/>
	      <xs:element name="Reason" type="soapenv:faultreason"/>
	      <xs:element name="Node" type="xs:anyURI" minOccurs="0"/>
		  <xs:element name="Role" type="xs:anyURI" minOccurs="0"/>
	      <xs:element name="Detail" type="soapenv:detail" minOccurs="0"/>
	    </xs:sequence>
	  </xs:complexType>
	
	  <xs:complexType name="faultreason">
	    <xs:sequence>
		  <xs:element name="Text" type="soapenv:reasontext" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	  </xs:complexType>
	
	  <xs:complexType name="reasontext">
	    <xs:simpleContent>
		  <xs:extension base="xs:string">
		    <xs:attribute ref="xml:lang" use="required"/>
		  </xs:extension>
		</xs:simpleContent>
	  </xs:complexType>
	
	  <xs:complexType name="faultcode">
	    <xs:sequence>
	      <xs:element name="Value" type="soapenv:faultcodeEnum"/>
	      <xs:element name="Subcode" type="soapenv:subcode" minOccurs="0"/>
	    </xs:sequence>
	  </xs:complexType>
	
	  <xs:simpleType name="faultcodeEnum">
	    <xs:restriction base="xs:QName">
	      <xs:enumeration value="soapenv:DataEncodingUnknown"/>
	      <xs:enumeration value="soapenv:MustUnderstand"/>
	      <xs:enumeration value="soapenv:Receiver"/>
	      <xs:enumeration value="soapenv:Sender"/>
	      <xs:enumeration value="soapenv:VersionMismatch"/>
	    </xs:restriction>
	  </xs:simpleType>
	
	  <xs:complexType name="subcode">
	    <xs:sequence>
	      <xs:element name="Value" type="xs:QName"/>
	      <xs:element name="Subcode" type="soapenv:subcode" minOccurs="0"/>
	    </xs:sequence>
	  </xs:complexType>
	
	  <xs:complexType name="detail">
	    <xs:sequence>
	      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
	    </xs:sequence>
	    <xs:anyAttribute namespace="##other" processContents="lax"/> 
	  </xs:complexType>
	
	  <!-- Global element declaration and complex type definition for header entry returned due to a mustUnderstand fault -->
	  <xs:element name="NotUnderstood" type="soapenv:NotUnderstoodType"/>
	  <xs:complexType name="NotUnderstoodType">
	    <xs:attribute name="qname" type="xs:QName" use="required"/>
	  </xs:complexType>
	
	
	  <!-- Global element and associated types for managing version transition as described in Appendix A of the SOAP Version 1.2 Part 1 Recommendation  -->  
	  <xs:complexType name="SupportedEnvType">
	    <xs:attribute name="qname" type="xs:QName" use="required"/>
	  </xs:complexType>
	
	  <xs:element name="Upgrade" type="soapenv:UpgradeType"/>
	  <xs:complexType name="UpgradeType">
	    <xs:sequence>
		  <xs:element name="SupportedEnvelope" type="soapenv:SupportedEnvType" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	  </xs:complexType>
	
	
	</xs:schema>
	   
	   
	   
     <xs:schema targetNamespace="http://uri.etsi.org/TS102204/v1.1.2#"
     	xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
     	xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#"
     	xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
		elementFormDefault="qualified">
		
	 	
		<xs:complexType name="MessageAbstractType" abstract="true">
			<xs:sequence>
				<xs:element name="AP_Info">
					<xs:complexType>
						<xs:attribute name="AP_ID" type="xs:anyURI" use="required"/>
                        <xs:attribute name="AP_PWD" type="xs:string" use="required"/>
						<xs:attribute name="AP_TransID" type="xs:NCName" use="required"/>
						<xs:attribute name="Instant" type="xs:dateTime" use="required"/>
						<!--<xs:attribute name="AP_URL" type="xs:anyURI" use="optional"/>-->
					</xs:complexType>
				</xs:element>
				<xs:element name="MSSP_Info">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="MSSP_ID" type="mss:MeshMemberType"/>
						</xs:sequence>
						<xs:attribute name="Instant" type="xs:dateTime" use="optional"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="MajorVersion" type="xs:integer" use="required"/>
			<xs:attribute name="MinorVersion" type="xs:integer" use="required"/>
		</xs:complexType>
		<xs:element name="MSS_SignatureReq" type="mss:MSS_SignatureReqType"/>
		<xs:complexType name="MSS_SignatureReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
						<xs:element name="DataToBeSigned" type="mss:DataType"/>
						<xs:element name="DataToBeDisplayed" type="mss:DataType" minOccurs="0"/>
						<xs:element name="SignatureProfile" type="mss:mssURIType" minOccurs="0"/>
						<xs:element name="AdditionalServices" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Service" type="mss:AdditionalServiceType" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="MSS_Format" type="mss:mssURIType" minOccurs="0"/>
						<xs:element name="KeyReference" type="mss:KeyReferenceType" minOccurs="0"/>
						<xs:element name="SignatureProfileComparison" type="mss:SignatureProfileComparisonType" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="ValidityDate" type="xs:dateTime" use="optional"/>
					<xs:attribute name="TimeOut" type="xs:positiveInteger" use="optional"/>
					<xs:attribute name="MessagingMode" type="mss:MessagingModeType" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_SignatureResp" type="mss:MSS_SignatureRespType"/>
		<xs:complexType name="MSS_SignatureRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
						<xs:element name="MSS_Signature" type="mss:SignatureType" minOccurs="0"/>
						<xs:element name="SignatureProfile" type="mss:mssURIType" minOccurs="0"/>
						<xs:element name="Status" type="mss:StatusType"/>
					</xs:sequence>
					<xs:attribute name="MSSP_TransID" type="xs:NCName" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_StatusReq" type="mss:MSS_StatusReqType"/>
		<xs:complexType name="MSS_StatusReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:attribute name="MSSP_TransID" type="xs:NCName" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_StatusResp" type="mss:MSS_StatusRespType"/>
		<xs:complexType name="MSS_StatusRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
						<xs:element name="MSS_Signature" type="mss:SignatureType" minOccurs="0"/>
						<xs:element name="Status" type="mss:StatusType"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_RegistrationReq" type="mss:MSS_RegistrationReqType"/>
		<xs:complexType name="MSS_RegistrationReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
						<xs:element name="EncryptedData" type="xenc:EncryptedType" minOccurs="0"/>
						<xs:element name="EncryptResponseBy" type="xs:anyURI" minOccurs="0"/>
						<xs:element name="CertificateURI" type="xs:anyURI" minOccurs="0"/>
						<xs:element name="X509Certificate" type="xs:base64Binary" minOccurs="0"/>
						<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_RegistrationResp" type="mss:MSS_RegistrationRespType"/>
		<xs:complexType name="MSS_RegistrationRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="Status" type="mss:StatusType"/>
						<xs:element name="EncryptedData" type="xenc:EncryptedType" minOccurs="0"/>
						<xs:element name="CertificateURI" type="xs:anyURI" minOccurs="0"/>
						<xs:element name="X509Certificate" type="xs:base64Binary" minOccurs="0"/>
						<xs:element name="PublicKey" type="xs:base64Binary" minOccurs="0"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_ProfileReq" type="mss:MSS_ProfileReqType"/>
		<xs:complexType name="MSS_ProfileReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_ProfileResp" type="mss:MSS_ProfileRespType"/>
		<xs:complexType name="MSS_ProfileRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="SignatureProfile" type="mss:mssURIType" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="Status" type="mss:StatusType"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_ReceiptReq" type="mss:MSS_ReceiptReqType"/>
		<xs:complexType name="MSS_ReceiptReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="MobileUser" type="mss:MobileUserType"/>
						<xs:element name="Status" type="mss:StatusType" minOccurs="0"/>
						<xs:element name="Message" type="mss:DataType" minOccurs="0"/>
						<xs:element name="SignedReceipt" type="ds:SignatureType" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="MSSP_TransID" type="xs:NCName" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_ReceiptResp" type="mss:MSS_ReceiptRespType"/>
		<xs:complexType name="MSS_ReceiptRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="Status" type="mss:StatusType"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_HandshakeReq" type="mss:MSS_HandshakeReqType"/>
		<xs:complexType name="MSS_HandshakeReqType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="SecureMethods">
							<xs:complexType>
								<xs:attribute name="MSS_Signature" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Registration" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Notification" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_ProfileQuery" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Receipt" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Status" type="xs:boolean" use="required"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Certificates">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Certificate" type="xs:base64Binary" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="RootCAs">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DN" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="SignatureAlgList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Algorithm" type="mss:mssURIType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:element name="MSS_HandshakeResp" type="mss:MSS_HandshakeRespType"/>
		<xs:complexType name="MSS_HandshakeRespType">
			<xs:complexContent>
				<xs:extension base="mss:MessageAbstractType">
					<xs:sequence>
						<xs:element name="SecureMethods">
							<xs:complexType>
								<xs:attribute name="MSS_Signature" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Registration" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Notification" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_ProfileQuery" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Receipt" type="xs:boolean" use="required"/>
								<xs:attribute name="MSS_Status" type="xs:boolean" use="required"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="MatchingMSSPCertificates">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Certificate" type="xs:base64Binary" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="MatchingAPCertificates">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Certificate" type="xs:base64Binary" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="MatchingSigAlgList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Algorithm" type="mss:mssURIType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="MSSP_TransID" type="xs:NCName" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:complexType name="MobileUserType">
			<xs:sequence>
				<xs:element name="IdentityIssuer" type="mss:MeshMemberType" minOccurs="0"/>
				<xs:element name="UserIdentifier" type="xs:string" minOccurs="0"/>
				<xs:element name="HomeMSSP" type="mss:MeshMemberType" minOccurs="0"/>
				<xs:element name="MSISDN" type="xs:string" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="DataType">
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="MimeType" type="xs:string" use="optional"/>
					<xs:attribute name="Encoding" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
		<xs:simpleType name="SignatureProfileComparisonType">
			<xs:restriction base="xs:string">
				<xs:enumeration value="exact"/>
				<xs:enumeration value="minimum"/>
				<xs:enumeration value="better"/>
			</xs:restriction>
		</xs:simpleType>
		<xs:simpleType name="MessagingModeType">
			<xs:restriction base="xs:string">
				<xs:enumeration value="synch"/>
				<xs:enumeration value="asynchClientServer"/>
				<xs:enumeration value="asynchServerServer"/>
			</xs:restriction>
		</xs:simpleType>
		<xs:complexType name="DigestAlgAndValueType">
			<xs:sequence>
				<xs:element name="DigestMethod" type="ds:DigestMethodType" minOccurs="0"/>
				<xs:element name="DigestValue" type="ds:DigestValueType"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="mssURIType">
			<xs:sequence>
				<xs:element name="mssURI" type="xs:anyURI"/>
				<xs:element name="DigestAlgAndValue" type="mss:DigestAlgAndValueType" minOccurs="0"/>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="MeshMemberType">
			<xs:sequence>
				<xs:element name="DNSName" type="xs:string" minOccurs="0"/>
				<xs:element name="IPAddress" type="xs:string" minOccurs="0"/>
				<xs:element name="URI" type="xs:anyURI" minOccurs="0"/>
				<xs:element name="IdentifierString" type="xs:string" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="KeyReferenceType">
			<xs:sequence>
				<xs:element name="CertificateURL" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="CertificateIssuerDN" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="HashOfUsersPublicKey" type="mss:DigestAlgAndValueType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="HashOfCAPublicKey" type="mss:DigestAlgAndValueType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:any namespace="##other" processContents="lax"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="SignatureType">
			<xs:choice>
				<xs:element name="XMLSignature" type="ds:SignatureType"/>
				<xs:element name="Base64Signature" type="xs:base64Binary"/>
				<xs:any namespace="##other" processContents="lax" minOccurs="0"/>
				<!-- this can also be an advanced XML Signature-->
			</xs:choice>
		</xs:complexType>
		<xs:element name="MSS_MessageSignature">
			<xs:complexType>
				<xs:sequence>
					<xs:element ref="ds:Signature"/>
				</xs:sequence>
				<xs:attribute ref="soapenv:role" use="required"/>
				<xs:attribute ref="soapenv:mustUnderstand" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:complexType name="AdditionalServiceType">
			<xs:sequence>
				<xs:element name="Description" type="mss:mssURIType"/>
				<xs:element name="Entity" type="mss:MeshMemberType" minOccurs="0"/>
				<xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="StatusType">
			<xs:sequence>
				<xs:element name="StatusCode" type="mss:StatusCodeType"/>
				<xs:element name="StatusMessage" type="xs:string" minOccurs="0"/>
				<xs:element name="StatusDetail" type="mss:StatusDetailType" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
		<xs:complexType name="StatusCodeType">
			<xs:sequence>
				<xs:element name="StatusCode" type="mss:StatusCodeType" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="Value" type="xs:integer" use="required"/>
		</xs:complexType>
		<xs:complexType name="StatusDetailType">
			<xs:sequence>
				<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:schema>
	
	
	
	<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" 
		  xml:lang="en">
		
		 <xs:annotation>
		  <xs:documentation>
		   <div>
		    <h1>About the XML namespace</h1>
		
		    <div class="bodytext">
		     <p>
		      This schema document describes the XML namespace, in a form
		      suitable for import by other schema documents.
		     </p>
		     <p>
		      See <a href="http://www.w3.org/XML/1998/namespace.html">
		      http://www.w3.org/XML/1998/namespace.html</a> and
		      <a href="http://www.w3.org/TR/REC-xml">
		      http://www.w3.org/TR/REC-xml</a> for information 
		      about this namespace.
		     </p>
		     <p>
		      Note that local names in this namespace are intended to be
		      defined only by the World Wide Web Consortium or its subgroups.
		      The names currently defined in this namespace are listed below.
		      They should not be used with conflicting semantics by any Working
		      Group, specification, or document instance.
		     </p>
		     <p>   
		      See further below in this document for more information about <a
		      href="#usage">how to refer to this schema document from your own
		      XSD schema documents</a> and about <a href="#nsversioning">the
		      namespace-versioning policy governing this schema document</a>.
		     </p>
		    </div>
		   </div>
		  </xs:documentation>
		 </xs:annotation>
		
		 <xs:attribute name="lang">
		  <xs:annotation>
		   <xs:documentation>
		    <div>
		     
		      <h3>lang (as an attribute name)</h3>
		      <p>
		       denotes an attribute whose value
		       is a language code for the natural language of the content of
		       any element; its value is inherited.  This name is reserved
		       by virtue of its definition in the XML specification.</p>
		     
		    </div>
		    <div>
		     <h4>Notes</h4>
		     <p>
		      Attempting to install the relevant ISO 2- and 3-letter
		      codes as the enumerated possible values is probably never
		      going to be a realistic possibility.  
		     </p>
		     <p>
		      See BCP 47 at <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">
		       http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
		      and the IANA language subtag registry at
		      <a href="http://www.iana.org/assignments/language-subtag-registry">
		       http://www.iana.org/assignments/language-subtag-registry</a>
		      for further information.
		     </p>
		     <p>
		      The union allows for the 'un-declaration' of xml:lang with
		      the empty string.
		     </p>
		    </div>
		   </xs:documentation>
		  </xs:annotation>
		  <xs:simpleType>
		   <xs:union memberTypes="xs:language">
		    <xs:simpleType>    
		     <xs:restriction base="xs:string">
		      <xs:enumeration value=""/>
		     </xs:restriction>
		    </xs:simpleType>
		   </xs:union>
		  </xs:simpleType>
		 </xs:attribute>
		
		 <xs:attribute name="space">
		  <xs:annotation>
		   <xs:documentation>
		    <div>
		     
		      <h3>space (as an attribute name)</h3>
		      <p>
		       denotes an attribute whose
		       value is a keyword indicating what whitespace processing
		       discipline is intended for the content of the element; its
		       value is inherited.  This name is reserved by virtue of its
		       definition in the XML specification.</p>
		     
		    </div>
		   </xs:documentation>
		  </xs:annotation>
		  <xs:simpleType>
		   <xs:restriction base="xs:NCName">
		    <xs:enumeration value="default"/>
		    <xs:enumeration value="preserve"/>
		   </xs:restriction>
		  </xs:simpleType>
		 </xs:attribute>
		 
		 <xs:attribute name="base" type="xs:anyURI"> <xs:annotation>
		   <xs:documentation>
		    <div>
		     
		      <h3>base (as an attribute name)</h3>
		      <p>
		       denotes an attribute whose value
		       provides a URI to be used as the base for interpreting any
		       relative URIs in the scope of the element on which it
		       appears; its value is inherited.  This name is reserved
		       by virtue of its definition in the XML Base specification.</p>
		     
		     <p>
		      See <a
		      href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
		      for information about this attribute.
		     </p>
		    </div>
		   </xs:documentation>
		  </xs:annotation>
		 </xs:attribute>
		 
		 <xs:attribute name="id" type="xs:ID">
		  <xs:annotation>
		   <xs:documentation>
		    <div>
		     
		      <h3>id (as an attribute name)</h3> 
		      <p>
		       denotes an attribute whose value
		       should be interpreted as if declared to be of type ID.
		       This name is reserved by virtue of its definition in the
		       xml:id specification.</p>
		     
		     <p>
		      See <a
		      href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
		      for information about this attribute.
		     </p>
		    </div>
		   </xs:documentation>
		  </xs:annotation>
		 </xs:attribute>
		
		 <xs:attributeGroup name="specialAttrs">
		  <xs:attribute ref="xml:base"/>
		  <xs:attribute ref="xml:lang"/>
		  <xs:attribute ref="xml:space"/>
		  <xs:attribute ref="xml:id"/>
		 </xs:attributeGroup>
		
		 <xs:annotation>
		  <xs:documentation>
		   <div>
		   
		    <h3>Father (in any context at all)</h3> 
		
		    <div class="bodytext">
		     <p>
		      denotes Jon Bosak, the chair of 
		      the original XML Working Group.  This name is reserved by 
		      the following decision of the W3C XML Plenary and 
		      XML Coordination groups:
		     </p>
		     <blockquote>
		       <p>
			In appreciation for his vision, leadership and
			dedication the W3C XML Plenary on this 10th day of
			February, 2000, reserves for Jon Bosak in perpetuity
			the XML name "xml:Father".
		       </p>
		     </blockquote>
		    </div>
		   </div>
		  </xs:documentation>
		 </xs:annotation>
		
		 <xs:annotation>
		  <xs:documentation>
		   <div xml:id="usage" id="usage">
		    <h2><a name="usage">About this schema document</a></h2>
		
		    <div class="bodytext">
		     <p>
		      This schema defines attributes and an attribute group suitable
		      for use by schemas wishing to allow <code>xml:base</code>,
		      <code>xml:lang</code>, <code>xml:space</code> or
		      <code>xml:id</code> attributes on elements they define.
		     </p>
		     <p>
		      To enable this, such a schema must import this schema for
		      the XML namespace, e.g. as follows:
		     </p>
		     <pre>
		          &lt;schema . . .>
		           . . .
		           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
		                      schemaLocation="http://www.w3.org/2001/xml.xsd"/>
		     </pre>
		     <p>
		      or
		     </p>
		     <pre>
		           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
		                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/>
		     </pre>
		     <p>
		      Subsequently, qualified reference to any of the attributes or the
		      group defined below will have the desired effect, e.g.
		     </p>
		     <pre>
		          &lt;type . . .>
		           . . .
		           &lt;attributeGroup ref="xml:specialAttrs"/>
		     </pre>
		     <p>
		      will define a type which will schema-validate an instance element
		      with any of those attributes.
		     </p>
		    </div>
		   </div>
		  </xs:documentation>
		 </xs:annotation>
		
		 <xs:annotation>
		  <xs:documentation>
		   <div id="nsversioning" xml:id="nsversioning">
		    <h2><a name="nsversioning">Versioning policy for this schema document</a></h2>
		    <div class="bodytext">
		     <p>
		      In keeping with the XML Schema WG's standard versioning
		      policy, this schema document will persist at
		      <a href="http://www.w3.org/2009/01/xml.xsd">
		       http://www.w3.org/2009/01/xml.xsd</a>.
		     </p>
		     <p>
		      At the date of issue it can also be found at
		      <a href="http://www.w3.org/2001/xml.xsd">
		       http://www.w3.org/2001/xml.xsd</a>.
		     </p>
		     <p>
		      The schema document at that URI may however change in the future,
		      in order to remain compatible with the latest version of XML
		      Schema itself, or with the XML namespace itself.  In other words,
		      if the XML Schema or XML namespaces change, the version of this
		      document at <a href="http://www.w3.org/2001/xml.xsd">
		       http://www.w3.org/2001/xml.xsd 
		      </a> 
		      will change accordingly; the version at 
		      <a href="http://www.w3.org/2009/01/xml.xsd">
		       http://www.w3.org/2009/01/xml.xsd 
		      </a> 
		      will not change.
		     </p>
		     <p>
		      Previous dated (and unchanging) versions of this schema 
		      document are at:
		     </p>
		     <ul>
		      <li><a href="http://www.w3.org/2009/01/xml.xsd">
			http://www.w3.org/2009/01/xml.xsd</a></li>
		      <li><a href="http://www.w3.org/2007/08/xml.xsd">
			http://www.w3.org/2007/08/xml.xsd</a></li>
		      <li><a href="http://www.w3.org/2004/10/xml.xsd">
			http://www.w3.org/2004/10/xml.xsd</a></li>
		      <li><a href="http://www.w3.org/2001/03/xml.xsd">
			http://www.w3.org/2001/03/xml.xsd</a></li>
		     </ul>
		    </div>
		   </div>
		  </xs:documentation>
		 </xs:annotation>
		
	</xs:schema>


		
	<xs:schema targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
	xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" 
	elementFormDefault="qualified" 
	attributeFormDefault="unqualified" version="0.1">
	
		<!-- // Fault Codes /////////////////////////////////////////// -->
		<xs:simpleType name="tTimestampFault">
			<xs:annotation>
				<xs:documentation>
	This type defines the fault code value for Timestamp message expiration.
	          </xs:documentation>
			</xs:annotation>
			<xs:restriction base="xs:QName">
				<xs:enumeration value="wsu:MessageExpired"/>
			</xs:restriction>
		</xs:simpleType>
		<!-- // Global attributes //////////////////////////////////// -->
		<xs:attribute name="Id" type="xs:ID">
			<xs:annotation>
				<xs:documentation>
	This global attribute supports annotating arbitrary elements with an ID.
	          </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup name="commonAtts">
			<xs:annotation>
				<xs:documentation>
	Convenience attribute group used to simplify this schema.
	          </xs:documentation>
			</xs:annotation>
			<xs:attribute ref="wsu:Id" use="optional"/>
			<xs:anyAttribute namespace="##other" processContents="lax"/>
		</xs:attributeGroup>
		<!-- // Utility types //////////////////////////////////////// -->
		<xs:complexType name="AttributedDateTime">
			<xs:annotation>
				<xs:documentation>
	This type is for elements whose [children] is a psuedo-dateTime and can have arbitrary attributes. 
	      </xs:documentation>
			</xs:annotation>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attributeGroup ref="wsu:commonAtts"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
		<xs:complexType name="AttributedURI">
			<xs:annotation>
				<xs:documentation>
	This type is for elements whose [children] is an anyURI and can have arbitrary attributes.
	      </xs:documentation>
			</xs:annotation>
			<xs:simpleContent>
				<xs:extension base="xs:anyURI">
					<xs:attributeGroup ref="wsu:commonAtts"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
		<!-- // Timestamp header components /////////////////////////// -->
		<xs:complexType name="TimestampType">
			<xs:annotation>
				<xs:documentation>
	This complex type ties together the timestamp related elements into a composite type.
	            </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element ref="wsu:Created" minOccurs="0"/>
				<xs:element ref="wsu:Expires" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:any namespace="##other" processContents="lax"/>
				</xs:choice>
			</xs:sequence>
			<xs:attributeGroup ref="wsu:commonAtts"/>
		</xs:complexType>
		<xs:element name="Timestamp" type="wsu:TimestampType">
			<xs:annotation>
				<xs:documentation>
	This element allows Timestamps to be applied anywhere element wildcards are present,
	including as a SOAP header.
	            </xs:documentation>
			</xs:annotation>
		</xs:element>
		<!-- global element decls to allow individual elements to appear anywhere -->
		<xs:element name="Expires" type="wsu:AttributedDateTime">
			<xs:annotation>
				<xs:documentation>
	This element allows an expiration time to be applied anywhere element wildcards are present.
	            </xs:documentation>
			</xs:annotation>
		</xs:element>
		<xs:element name="Created" type="wsu:AttributedDateTime">
			<xs:annotation>
				<xs:documentation>
	This element allows a creation time to be applied anywhere element wildcards are present.
	            </xs:documentation>
			</xs:annotation>
		</xs:element>
	</xs:schema>
	


 	<xs:schema targetNamespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" 
	xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" 
	xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
	xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" 
	elementFormDefault="qualified" 
	attributeFormDefault="unqualified" 
	blockDefault="#all" 
	version="0.2">
	
	 
	
	<xs:complexType name="AttributedString">
		<xs:annotation>
			<xs:documentation>This type represents an element with arbitrary attributes.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="wsu:Id"/>
				<xs:anyAttribute namespace="##other" processContents="lax"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="PasswordString">
		<xs:annotation>
			<xs:documentation>This type is used for password elements per Section 4.1.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="wsse:AttributedString">
				<xs:attribute name="Type" type="xs:anyURI"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="EncodedString">
		<xs:annotation>
			<xs:documentation>This type is used for elements containing stringified binary data.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="wsse:AttributedString">
				<xs:attribute name="EncodingType" type="xs:anyURI"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="UsernameTokenType">
		<xs:annotation>
			<xs:documentation>This type represents a username token per Section 4.1</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Username" type="wsse:AttributedString"/>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute ref="wsu:Id"/>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="BinarySecurityTokenType">
		<xs:annotation>
			<xs:documentation>A security token that is encoded in binary</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="wsse:EncodedString">
				<xs:attribute name="ValueType" type="xs:anyURI"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="KeyIdentifierType">
		<xs:annotation>
			<xs:documentation>A security token key identifier</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="wsse:EncodedString">
				<xs:attribute name="ValueType" type="xs:anyURI"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="tUsage">
		<xs:annotation>
			<xs:documentation>Typedef to allow a list of usages (as URIs).</xs:documentation>
		</xs:annotation>
		<xs:list itemType="xs:anyURI"/>
	</xs:simpleType>
	<xs:attribute name="Usage" type="wsse:tUsage">
		<xs:annotation>
			<xs:documentation>This global attribute is used to indicate the usage of a referenced or indicated token within the containing context</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:complexType name="ReferenceType">
		<xs:annotation>
			<xs:documentation>This type represents a reference to an external security token.</xs:documentation>
		</xs:annotation>
		<xs:attribute name="URI" type="xs:anyURI"/>
		<xs:attribute name="ValueType" type="xs:anyURI"/>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="EmbeddedType">
		<xs:annotation>
			<xs:documentation>This type represents a reference to an embedded security token.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:any processContents="lax"/>
		</xs:choice>
		<xs:attribute name="ValueType" type="xs:anyURI"/>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="SecurityTokenReferenceType">
		<xs:annotation>
			<xs:documentation>This type is used reference a security token.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:any processContents="lax"/>
		</xs:choice>
		<xs:attribute ref="wsu:Id"/>
		<xs:attribute ref="wsse:Usage"/>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="SecurityHeaderType">
		<xs:annotation>
			<xs:documentation>This complexType defines header block to use for security-relevant data directed at a specific SOAP actor.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The use of "any" is to allow extensibility and different forms of security data.</xs:documentation>
				</xs:annotation>
			</xs:any>
		</xs:sequence>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:complexType name="TransformationParametersType">
		<xs:annotation>
			<xs:documentation>This complexType defines a container for elements to be specified from any namespace as properties/parameters of a DSIG transformation.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The use of "any" is to allow extensibility from any namespace.</xs:documentation>
				</xs:annotation>
			</xs:any>
		</xs:sequence>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
	<xs:element name="UsernameToken" type="wsse:UsernameTokenType">
		<xs:annotation>
			<xs:documentation>This element defines the wsse:UsernameToken element per Section 4.1.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BinarySecurityToken" type="wsse:BinarySecurityTokenType">
		<xs:annotation>
			<xs:documentation>This element defines the wsse:BinarySecurityToken element per Section 4.2.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Reference" type="wsse:ReferenceType">
		<xs:annotation>
			<xs:documentation>This element defines a security token reference</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Embedded" type="wsse:EmbeddedType">
		<xs:annotation>
			<xs:documentation>This element defines a security token embedded reference</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="KeyIdentifier" type="wsse:KeyIdentifierType">
		<xs:annotation>
			<xs:documentation>This element defines a key identifier reference</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="SecurityTokenReference" type="wsse:SecurityTokenReferenceType">
		<xs:annotation>
			<xs:documentation>This element defines the wsse:SecurityTokenReference per Section 4.3.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Security" type="wsse:SecurityHeaderType">
		<xs:annotation>
			<xs:documentation>This element defines the wsse:Security SOAP header element per Section 4.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="TransformationParameters" type="wsse:TransformationParametersType">
		<xs:annotation>
			<xs:documentation>This element contains properties for transformations from any namespace, including DSIG.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Password" type="wsse:PasswordString"/>
	<xs:element name="Nonce" type="wsse:EncodedString"/>
	<xs:simpleType name="FaultcodeEnum">
		<xs:restriction base="xs:QName">
			<xs:enumeration value="wsse:UnsupportedSecurityToken"/>
			<xs:enumeration value="wsse:UnsupportedAlgorithm"/>
			<xs:enumeration value="wsse:InvalidSecurity"/>
			<xs:enumeration value="wsse:InvalidSecurityToken"/>
			<xs:enumeration value="wsse:FailedAuthentication"/>
			<xs:enumeration value="wsse:FailedCheck"/>
			<xs:enumeration value="wsse:SecurityTokenUnavailable"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>  


  </wsdl:types>

	<wsdl:message name="MSS_SignatureOutput">
		<wsdl:part name="MSS_SignatureResp" type="mss:MSS_SignatureRespType">
		</wsdl:part>
	</wsdl:message>

	<wsdl:message name="MSS_SignatureInput">
		<wsdl:part name="MSS_SignatureReq" type="mss:MSS_SignatureReqType">
		</wsdl:part>
	</wsdl:message>

	<wsdl:message name="MSS_StatusQueryInput">
		<wsdl:part name="MSS_StatusReq" type="mss:MSS_StatusReqType" />
	</wsdl:message>
	<wsdl:message name="MSS_StatusQueryOutput">
		<wsdl:part name="MSS_StatusResp" type="mss:MSS_StatusRespType" />
	</wsdl:message>

	<wsdl:message name="MSS_ReceiptInput">
		<wsdl:part name="MSS_ReceiptReq" type="mss:MSS_ReceiptReqType" />
	</wsdl:message>
	<wsdl:message name="MSS_ReceiptOutput">
		<wsdl:part name="MSS_ReceiptResp" type="mss:MSS_ReceiptRespType" />
	</wsdl:message>

	<wsdl:message name="MSS_ProfileInput">
		<wsdl:part name="MSS_ProfileReq" type="mss:MSS_ProfileReqType" />
	</wsdl:message>
	<wsdl:message name="MSS_ProfileOutput">
		<wsdl:part name="MSS_ProfileResp" type="mss:MSS_ProfileRespType" />
	</wsdl:message>

	<wsdl:message name="MSS_FaultMessage">
		<wsdl:part name="MSS_Fault" element="soapenv:Fault">
		</wsdl:part>
	</wsdl:message>

	<wsdl:portType name="MSS_SignaturePortType">
		<wsdl:operation name="MSS_Signature">
			<wsdl:input message="tns:MSS_SignatureInput" />
			<wsdl:output message="tns:MSS_SignatureOutput" />
			<wsdl:fault message="tns:MSS_FaultMessage" name="FaultPart" />
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:portType name="MSS_StatusQueryType">
		<wsdl:operation name="MSS_StatusQuery">
			<wsdl:input message="tns:MSS_StatusQueryInput" />
			<wsdl:output message="tns:MSS_StatusQueryOutput" />
			<wsdl:fault message="tns:MSS_FaultMessage" name="FaultPart" />
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:portType name="MSS_ReceiptType">
		<wsdl:operation name="MSS_Receipt">
			<wsdl:input message="tns:MSS_ReceiptInput" />
			<wsdl:output message="tns:MSS_ReceiptOutput" />
			<wsdl:fault message="tns:MSS_FaultMessage" name="FaultPart" />
		</wsdl:operation>
	</wsdl:portType>
    
    <wsdl:portType name="MSS_ProfileType">
		<wsdl:operation name="MSS_ProfileQuery">
			<wsdl:input message="tns:MSS_ProfileInput" />
			<wsdl:output message="tns:MSS_ProfileOutput" />
			<wsdl:fault message="tns:MSS_FaultMessage" name="FaultPart" />
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:binding name="MSS_SignatureBinding" type="tns:MSS_SignaturePortType">
		<wsoap12:binding style="rpc"
			transport="http://www.w3.org/2003/05/soap/bindings/HTTP/" />
		<wsdl:operation name="MSS_Signature">
			<wsoap12:operation soapActionRequired="false"
				style="rpc" />
			<wsdl:input>
				<wsoap12:body parts="MSS_SignatureReq" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<wsoap12:body parts="MSS_SignatureResp" use="literal" />
			</wsdl:output>
			<wsdl:fault name="FaultPart">
				<wsoap12:fault parts="Fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>

	<wsdl:binding name="MSS_StatusQueryBinding" type="tns:MSS_StatusQueryType">
		<wsoap12:binding style="rpc"
			transport="http://www.w3.org/2003/05/soap/bindings/HTTP/" />
		<wsdl:operation name="MSS_StatusQuery">
			<wsoap12:operation soapActionRequired="false"
				style="rpc" />
			<wsdl:input>
				<wsoap12:body parts="MSS_StatusReq" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<wsoap12:body parts="MSS_StatusResp" use="literal" />
			</wsdl:output>
			<wsdl:fault name="FaultPart">
				<wsoap12:fault parts="Fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>
    
    

	<wsdl:binding name="MSS_ReceiptBinding" type="tns:MSS_ReceiptType">
		<wsoap12:binding style="rpc"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="MSS_Receipt">
			<wsoap12:operation soapActionRequired="false"
				style="rpc" />
			<wsdl:input>
				<wsoap12:body parts="MSS_ReceiptReq" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<wsoap12:body parts="MSS_ReceiptResp" use="literal" />
			</wsdl:output>
			<wsdl:fault name="FaultPart">
				<wsoap12:fault parts="Fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>   

	<wsdl:binding name="MSS_ProfileQueryBinding" type="tns:MSS_ProfileType">
		<wsoap12:binding style="rpc"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="MSS_ProfileQuery">
			<wsoap12:operation soapActionRequired="false"
				style="rpc" />
			<wsdl:input>
				<wsoap12:body parts="MSS_ProfileReq" use="literal" />
			</wsdl:input>
			<wsdl:output>
				<wsoap12:body parts="MSS_ProfileResp" use="literal" />
			</wsdl:output>
			<wsdl:fault name="FaultPart">
				<wsoap12:fault parts="Fault" use="literal" />
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>   

	<wsdl:service name="MSS_SignatureService">
		<wsdl:port name="MSS_SignaturePort" binding="tns:MSS_SignatureBinding">
			<wsoap12:address location="https://soap.mobileid.swisscom.com/soap/services/MSS_SignaturePort" />
		</wsdl:port>
	</wsdl:service>

	<wsdl:service name="MSS_StatusService">
		<wsdl:port name="MSS_StatusQueryPort" binding="tns:MSS_StatusQueryBinding">
			<wsoap12:address location="https://soap.mobileid.swisscom.com/soap/services/StatusQueryPort" />
		</wsdl:port>
	</wsdl:service>

	<wsdl:service name="MSS_ReceiptService">
		<wsdl:port name="MSS_ReceiptPort" binding="tns:MSS_ReceiptBinding">
			<wsoap12:address location="https://soap.mobileid.swisscom.com/soap/services/MSS_ReceiptPort" />
		</wsdl:port>
	</wsdl:service>    

	<wsdl:service name="MSS_ProfileService">
		<wsdl:port name="MSS_ProfilePort" binding="tns:MSS_ProfileQueryBinding">
			<wsoap12:address location="https://soap.mobileid.swisscom.com/soap/services/MSS_ProfilePort" />
		</wsdl:port>
	</wsdl:service>    

</wsdl:definitions>
